{
  "DataSource": {
    "Name": "Groups.io",
    "Slug": "groupsio"
  },
  "Endpoint": "https://groups.io/g/hyperledger+fabric",
  "Events": [
    {
      "Message": {
        "Body": "Hi,In Hyperledger Fabric after receiving endorser responses how the client se=nd it to=C2=A0 orderer? Please give me a detailed flow to understand how th=e client request is reached to orderer?\n",
        "CreatedAt": "2020-01-08T07:54:13.000Z",
        "CreatedAtInTZ": "2020-01-07T23:54:13.000Z",
        "CreatedTZ": -8,
        "DataSourceId": "groupsio",
        "InternalId": "<zbnO.1578470053620419388.DYy7@lists.hyperledger.org>",
        "MailingList": {
          "InternalId": "16360",
          "Name": "hyperledger+fabric",
          "URL": "https://groups.io/g/hyperledger+fabric"
        },
        "MessageId": "7977b3beb52590fcc2970179f170595a6b51daec",
        "Recipients": [],
        "Sender": {
          "DataSourceId": "groupsio",
          "Email": "amalcs2311@gmail.com",
          "Id": "af5317b462f30dd8414d8b201e615442af7660b5",
          "Name": "amalcs2311"
        },
        "Subject": "Regarding Client Orderer communication"
      }
    },
    {
      "Message": {
        "Body": "Try with the \"lifecycle\" option please\n\npeer lifecycle chaincode queryinstalledpeer lifecycle chaincode querycommitted -C myc\n\nand\n\"peer lifecycle chaincode --help\" for all the available subcommands.\nMurali\nOn Thu, Jan 2, 2020 at 11:08 AM Ross Tang <tangross@dashslab.com> wrote:\n> I am trying out the Fabric V2 Beta.>> I can successfully commit an approved chaincode, under the new chaincode> lifecycle.>> Then, I try to run legacy command `peer chaincode list =E2=80=94installe=d` or `peer> chaincode list =E2=80=94instantiated`. Nothing returns.>> The new command `peer lifecycle chaincode querycommitted` returns> normally.>>> Also, I try to send transaction via new Contract api, with> fabric-contract-api v1.4.4. It returns below error.>> { Error: make sure the chaincode micc has been successfully defined on> channel mychannel and try again: chaincode definition for =E2=80=98micc'= exists,> but chaincode is not installed=E2=80=A6.>>> In the documentation, it invoke transaction via low level api.>>> QUESTION:> Can new chaincode lifecycle and new Contract api working together? It> seems that the new Contract api can only recognise chaincode deployed in> legacy way.>> Is my understanding correct?>=20>>\n--=20Thanks,Murali\"Practice is a means of inviting the perfection desired.\" - Martha Graham=E2=80=9CWe ran and ran. We were exhausted, but we kept running.=E2=80=9D =- Homare Sawaafter winning 2011 Women's Soccer world cup\n",
        "CreatedAt": "2020-01-03T13:20:46.000Z",
        "CreatedAtInTZ": "2020-01-03T08:20:46.000Z",
        "CreatedTZ": -5,
        "DataSourceId": "groupsio",
        "InternalId": "<CALQMKmwZBi=gxbGjUjBb=JTXF1UOhZDUsnhRxbnHjZvoH1Sr7A@mail.gmail.com>",
        "MailingList": {
          "InternalId": "16360",
          "Name": "hyperledger+fabric",
          "URL": "https://groups.io/g/hyperledger+fabric"
        },
        "MessageId": "ba55ba45e263737161dc6f9b4ead81cfe4f9116a",
        "ParentID": "69af82a1a4799ce64eef70c76cdd0d14aefaeade",
        "ParentInternalID": "<8C85650B-E6C7-4D36-A078-F3C2CE41CBEE@dashslab.com>",
        "Recipients": [
          {
            "DataSourceId": "groupsio",
            "Email": "tangross@dashslab.com",
            "Id": "588b5014eea0373d23357fcba6fd574332cf4776",
            "Name": "Ross Tang"
          }
        ],
        "Sender": {
          "DataSourceId": "groupsio",
          "Email": "srinivasan.muralidharan99@gmail.com",
          "Id": "4ef07b99412f89ab46ac46f4e07b994f15630e2f",
          "Name": "Srinivasan Muralidharan"
        },
        "Subject": "Re: [Hyperledger Fabric] New Chaincode Lifecycle and new Programming Model can co exist"
      }
    },
    {
      "Message": {
        "Body": "As we enter the new year, I'd like to remind everybody that HyperledgerFabric contributor meetings occur every other Wednesday at 9am US Eastern /14:00 UTC.\nThe next meeting is tomorrow, January 8.\nIf you'd like to propose an agenda topic, reply to this mailing list, orpropose on RocketChat fabric-maintainers, and we'll work the agenda topicinto a future meeting.\nTypically the contributor meeting will include a quick release update andone or more deep dive topics such as feature proposals. However attomorrow's meeting, we expect to kick off the new year by spending moretime discussing some maintainer housekeeping topics (release branches,release cadence and LTS, fabric-rfcs, process for doc reviews).\nMore information, agendas, and recordings can be found athttps://wiki.hyperledger.org/display/fabric/Contributor+Meetings.\n\nThanks,\nDave Enyeart\n",
        "CreatedAt": "2020-01-07T16:49:50.000Z",
        "CreatedAtInTZ": "2020-01-07T11:49:50.000Z",
        "CreatedTZ": -5,
        "DataSourceId": "groupsio",
        "InternalId": "<OFCBC28361.3690E1E6-ON852584E8.00584301-852584E8.005C744C@notes.na.collabserv.com>",
        "MailingList": {
          "InternalId": "16360",
          "Name": "hyperledger+fabric",
          "URL": "https://groups.io/g/hyperledger+fabric"
        },
        "MessageId": "df8c58100b36e8a3c9320d54b8e8140dff916731",
        "Recipients": [
          {
            "DataSourceId": "groupsio",
            "Email": "fabric@lists.hyperledger.org",
            "Id": "531f64845a3a391cc5152c9f7975f0096bf88da5",
            "Name": "fabric"
          }
        ],
        "Sender": {
          "DataSourceId": "groupsio",
          "Email": "enyeart@us.ibm.com",
          "Id": "98fde1e67931d54caef487855cd48171c9298e92",
          "Name": "David Enyeart"
        },
        "Subject": "Hyperledger Fabric contributor meetings"
      }
    },
    {
      "Message": {
        "Body": "The easiest way to do is to use two private data collection, first is A-Bcollection and second is B-C collection. This way, all the three orgs canjoin the same channel or different channels with the private collectionswithout concerning about the orderer nodes at all.\nWith the private collection, each data collection will only be disseminate=dp2p to only authorized orgs and the private data will not be passed throug=hany orderer node like the way the public data transactions are performed.\nOn Thu, 9 Jan 2020, 22:44 Aleksandr Kochetkov, <aleksandr.kochetkov@altoros.com> wrote:\n> 3 parties, each have a peer and orderer:>> peer.a, orderer.a, peer.b, orederer.b, peer.c, orderer.c>> Orderers operating in Raft mode.>> 2 channels exists A-B, B-C.>> Goal is to isolate data flow, so organization C don=E2=80=99t have any a=ccess to> channel A-B, same for A and channel B-C.>> Is it possible to configure orderers in such manner, that orderer.c will> not receive and store blocks from channel A-B, and respectively orderer.=a> from B-C?>>=20>\n",
        "CreatedAt": "2020-01-11T09:37:28.000Z",
        "CreatedAtInTZ": "2020-01-11T16:37:28.000Z",
        "CreatedTZ": 7,
        "DataSourceId": "groupsio",
        "InternalId": "<CAC7p2or=KmNDSZ2AY6hLQ9Qx+42poUjuwJJp70AVby-qmxfiUQ@mail.gmail.com>",
        "MailingList": {
          "InternalId": "16360",
          "Name": "hyperledger+fabric",
          "URL": "https://groups.io/g/hyperledger+fabric"
        },
        "MessageId": "4ab416d48b9fc71ae9fe830fe749559f8c5419fd",
        "ParentID": "f0ebcc55534bf6b115c8a21fab712401436a4621",
        "ParentInternalID": "<Pgai.1578584641708764894.PF1A@lists.hyperledger.org>",
        "Recipients": [],
        "Sender": {
          "DataSourceId": "groupsio",
          "Email": "mr.thummavet@gmail.com",
          "Id": "0c4cbfc44df72e1ab89a2d4bc2366d41c7000f67",
          "Name": "Mr.Phuwanai Thummavet"
        },
        "Subject": "Re: [Hyperledger Fabric] How to achieve channels isolation on RAFT orderers?"
      }
    },
    {
      "Message": {
        "Body": "Hello Team,\nI have an urgent requirement to fulfill and am trying to update the batchsize for my network\nAm following the tutorial to \"Add org3 in to network\" that lists out thesteps to updated a channel configuration.While running the final step to update\" peer channel update -f batch_update_in_envelope.pb -c $CHANNEL_NAME -oorderer.example.com:7050 --tls --cafile $ORDERER_CA\"\nit fails with below error\n2020-01-11 19:41:29.563 UTC [channelCmd] InitCmdFactory -> INFO 001Endorser and orderer connections initializedError: got unexpected status: BAD_REQUEST -- error applying config updateto existing channel 'mychannel': error authorizing update: error validatingDeltaSet: policy for [Value]  /Channel/Orderer/BatchSize not satisfied:implicit policy evaluation failed - 0 sub-policies were satisfied, but thispolicy requires 1 of the 'Admins' sub-policies to be satisfied\n\nPlease help me out if possible urgently since I have to deliver this inanother 10-12 hours.\n",
        "CreatedAt": "2020-01-11T19:49:57.000Z",
        "CreatedAtInTZ": "2020-01-12T01:19:57.000Z",
        "CreatedTZ": 5.5,
        "DataSourceId": "groupsio",
        "InternalId": "<CA+wWQMRcYYCSJ6njJsRSifD9P5az8TxuijXd3W2zhCbgch1dcw@mail.gmail.com>",
        "MailingList": {
          "InternalId": "16360",
          "Name": "hyperledger+fabric",
          "URL": "https://groups.io/g/hyperledger+fabric"
        },
        "MessageId": "5432ec4371e8347d5d07b3915f85c92604486ae9",
        "Recipients": [
          {
            "DataSourceId": "groupsio",
            "Email": "hyperledger-fabric@lists.hyperledger.org",
            "Id": "ee9aee48ed3b9cb7ea768dfc72cc15e2d4072b7e",
            "Name": "hyperledger-fabric"
          }
        ],
        "Sender": {
          "DataSourceId": "groupsio",
          "Email": "suhan.premilu@gmail.com",
          "Id": "7baab3af98a3fadae55dc5a080933f7059a8b36f",
          "Name": "Suhan Sumeet"
        },
        "Subject": "IMP: Failed to update batch size in fabric"
      }
    },
    {
      "Message": {
        "Body": "Thanks, I'll check it out.\nOn Fri, 3 Jan 2020, 03:08 Baohua Yang, <yangbaohua@gmail.com> wrote:\n> You can unpack it using the package  \"> github.com/hyperledger/fabric/core/common/ccprovider\" easily.>> Basically, you read the file, un-marshal and store the internal package as> the tar file.>> Here's one example I've written:> https://github.com/yeasy/blockchain_guide/blob/master/_code/unpack_chaincode.go> .>> FYI.>> On Thu, Jan 2, 2020 at 1:37 AM Mr.Phuwanai Thummavet <> mr.thummavet@gmail.com> wrote:>>> Hi all,>>>> Does anyone know how to unpack a packaged chaincode (.cds and/or .out>> extension)? I can't find any documentation regarding it.>>>> Thanks.>> -->> Best Regards,>> Phuwanai Thummavet>> Blockchain Architect and Full-Stack Developer>> >>>>>> --> Best wishes!>> Baohua Yang>\n",
        "CreatedAt": "2020-01-03T06:08:00.000Z",
        "CreatedAtInTZ": "2020-01-03T13:08:00.000Z",
        "CreatedTZ": 7,
        "DataSourceId": "groupsio",
        "InternalId": "<CAC7p2oopU1qEjSYb59FpZx=q6EOtJEHso=zXw_07SRxcRGF7yQ@mail.gmail.com>",
        "MailingList": {
          "InternalId": "16360",
          "Name": "hyperledger+fabric",
          "URL": "https://groups.io/g/hyperledger+fabric"
        },
        "MessageId": "876ede189d6bbc7e387ca2587e73e77a46d5d1d3",
        "ParentID": "d57fe07509b4c0ad157c0a450d9bbdc858e4e498",
        "ParentInternalID": "<CACbo-EDOGCA6zU0Tc9ogWkSj3T=hbUKTF9-UfjcDx6KTQ8edTA@mail.gmail.com>",
        "Recipients": [
          {
            "DataSourceId": "groupsio",
            "Email": "yangbaohua@gmail.com",
            "Id": "fd233d7a6a6b632f2222e862acd67b3fe37b1e98",
            "Name": "Baohua Yang"
          }
        ],
        "Sender": {
          "DataSourceId": "groupsio",
          "Email": "mr.thummavet@gmail.com",
          "Id": "0c4cbfc44df72e1ab89a2d4bc2366d41c7000f67",
          "Name": "Mr.Phuwanai Thummavet"
        },
        "Subject": "Re: [Hyperledger Fabric] How to unpack a packaged chaincode"
      }
    },
    {
      "Message": {
        "Body": "CgoKCgoKCgoKCgoKLS0tLS0tLS0gRm9yd2FyZGluZyBtZXNzYWdlcyAtLS0tLS0tLQpGcm9tOiAibWVuZyIgPHFzbWVuZ0AxMjYuY29tPgpEYXRlOiAyMDIwLTAxLTEzIDExOjA4OjM0ClRvOiAiTmlraGlsIEUgR3VwdGEiIDxuZWd1cHRhQHVzLmlibS5jb20+LHJvYmVydEBpeWFzZWMuaW8sbmx6YW51dGltQHlhaG9vLmNvbQpTdWJqZWN0OiBSZTpSZTogcmXvvJpbSHlwZXJsZWRnZXIgRmFicmljXSBpZGVudGl0eSBhdXRoZW50aWNhdGlvbgoKSGksCiAgICAgVGhhbmsgeW91IGFsbCBmb3IgeW91ciByZXBseS4KICAgICBBYm91dCB0aGUgQ0lELCB0aGUgY2VydGlmaWNhdGUgaXMgaW5pdGlhbGl6ZWQgaW50byBhbiBvYmplY3QgYW5kIHRoZSBpbmZvcm1hdGlvbiBsaWtlIGlkL21zcElEIGlzIG9idGFpbmVkIGJ5IENJRCBmdW5jdGlvbi4gVGhlIGF1dGhlbnRpY2l0eSBhYm91dCB0aGUgSUQgaXMgbm90IGNoZWNrZWQgYXQgYWxsLiBDSUQgdGhpbmsgaXQgaXMgdHJ1ZSBiZWNhdXNlIHRoZSBlbmRvcnNpbmcgcGVlciBoYXMgYWxyZWFkeSBjaGVja2VkLgogICAgQWJvdXQgU0RLIG1haW50YWluaW5nIGEgY3JlZGVudGlhbCB3YWxsZXQgdGhhdCBob2xkcyBlbmQgdXNlcidzIEhMRiBjcmVkZW50aWFscywgSSBkaWRub3QgZmluZCBhbnkgbWF0ZXJpYWwgb24gaXQuIEkgZ3Vlc3MgdGhlIERBcHAgdXNlcyB0aGUgY3JlZG50aWFscyBpbiB0aGUgd2FsbGV0IHRvIGNoZWNrIHRoZSBJRCBvZiBlbmR1c2Vycz8gSXMgdGhlIHRyYW5zYWN0aW9uIHByb3Bvc2FsIHRoZW4gc2lnbmVkICBieSB0aGUgREFwcCBhbmQgc3VibWl0dGVkIHRvIEZhYnJpYz8gIElmIHNvLCB3ZSBtdXN0IHRydXN0IHRoZSBEQXBwLiAKICBBYm91dCB0aGUgcmVzdGZ1bCBBUEksIGFuIGVuZHVzZXIgbXVzdCBzZW5kIGEgIHByb3Bvc2FsIHRvIGEgc2VydmVyLCB3aGF0IGlzIHRoZSBzZXJ2ZXIgdGhhdCBoYW5kbGVzIHRoZSBwcm9wb3NhbCBhbmQgd2hlcmUgdGhlIHNlcnZlciBpcyBydW5uaW5nPyAKICBUaGFuayB5b3UuCiAgIEJlc3QgcmVnYXJkcywKcXNtZW5nCgoKCgoKCgoKCgoKCkF0IDIwMTktMTItMDYgMDA6MTk6MjcsICJOaWtoaWwgRSBHdXB0YSIgPG5lZ3VwdGFAdXMuaWJtLmNvbT4gd3JvdGU6CgpJIHdvdWxkIGxvb2sgdXAgYXR0cmlidXRlIGJhc2VkIGFjY2VzcyBjb250cm9sOiBodHRwczovL2ZhYnJpYy1zaGltLmdpdGh1Yi5pby9tYXN0ZXIvZmFicmljLXNoaW0uQ2xpZW50SWRlbnRpdHkuaHRtbCNhc3NlcnRBdHRyaWJ1dGVWYWx1ZQoKCgoKCi0tLS0tZmFicmljQGxpc3RzLmh5cGVybGVkZ2VyLm9yZyB3cm90ZTogLS0tLS0KVG86IFJvYmVydCBCcm9lY2tlbG1hbm4gPHJvYmVydEBpeWFzZWMuaW8+CkZyb206ICJxcyBtZW5nIgpTZW50IGJ5OiBmYWJyaWNAbGlzdHMuaHlwZXJsZWRnZXIub3JnCkRhdGU6IDEyLzA0LzIwMTkgMDk6MjFQTQpDYzogTmljaG9sYXMgWmFudXRpbSA8bmx6YW51dGltQHlhaG9vLmNvbT4sICJmYWJyaWNAbGlzdHMuaHlwZXJsZWRnZXIub3JnIiA8ZmFicmljQGxpc3RzLmh5cGVybGVkZ2VyLm9yZz4KU3ViamVjdDogW0VYVEVSTkFMXSDlm57lpI3vvJpbSHlwZXJsZWRnZXIgRmFicmljXSBpZGVudGl0eSBhdXRoZW50aWNhdGlvbgoKCmhlbGxvIFJvYmVydCwKbW9yZSBzcGVjaWZpY2x5LEkgd2FudCB0byBhdXRoZW50aWNhdGUgcmVxdWVzdG9yIGlkIGluIGNoYWluY29kZS4gdGhpcyBwcm92aWRlIG1vcmUgZnJlZWRvbSBmb3IgZW5kdXNlci4gCnRoYW5rIHlvdS4gCnJlZ2FyZHMuIApxc21lbmcKCgoKCgotLS0tLS0tLSDljp/lp4vpgq7ku7YgLS0tLS0tLS0K5Y+R5Lu25Lq677yaIFJvYmVydCBCcm9lY2tlbG1hbm4gPHJvYmVydEBpeWFzZWMuaW8+CuaXpeacn++8miAyMDE55bm0MTLmnIg05pel5ZGo5LiJIOS4reWNiDEyOjMyCuaUtuS7tuS6uu+8miBxcyBtZW5nIDxxc21lbmdAMTI2LmNvbT4K5oqE6YCB77yaIE5pY2hvbGFzIFphbnV0aW0gPG5semFudXRpbUB5YWhvby5jb20+LCBmYWJyaWNAbGlzdHMuaHlwZXJsZWRnZXIub3JnCuS4uyDpopjvvJogUmU6IFtIeXBlcmxlZGdlciBGYWJyaWNdIGlkZW50aXR5IGF1dGhlbnRpY2F0aW9uCgpIZWxsby4gCgoKSSBoYWQgYSBzaW1pbGFyIHNpdHVhdGlvbiBlYXJsaWVyIHRoaXMgeWVhci4KCgpUaGUgRmFicmljIFNES3MgY29udGFpbiBzdXBwb3J0IGZvciBtYWludGFpbmluZyBhIGNyZWRlbnRpYWwgd2FsbGV0IHRoYXQgaG9sZHMgZW5kIHVzZXIncyBITEYgY3JlZGVudGlhbHMuCgoKSWYgeW91IGhhdmUgYW4gYXJjaGl0ZWN0dXJlIHNpbWlsYXIgdG86CgoKTW9iaWxlIEFwcC0+IFJFU1QgQVBJLT5ITEYgUGVlciAKCgpUaGVuLCB0aGUgUkVTVCBBUEkgbGF5ZXIgY2FuIGJlIHVzZWQgdG8gdHJhbnNsYXRlIGZyb20gYSBzZWN1cml0eSB0b2tlbiBlbWJlZGRlZCBpbiBBUEkgcmVxdWVzdHMgdG8gY3JlZGVudGlhbHMgdGhhdCB0aGUgYmxvY2tjaGFpbiBuZXR3b3JrIHdpbGwgdW5kZXJzdGFuZCAoaWUsIFBLSSBhbiBYNTA5IHByaXZhdGUgcHVibGljIGtleSBwYWlycykuCgoKU2VlIFsxXSBmb3IgYW4gZXhhbXBsZS4gCgoKT3VyIHJlcXVpcmVtZW50cyBldmVudHVhbGx5IHNoaWZ0ZWQgdG8gYW4gImFwcGxpY2F0aW9uIiBpZCBiZWluZyByZWNvcmRlZCBpbiB0aGUgYmxvY2tjaGFpbi4gU28sIHdlIGp1c3QgaXNzdWVkIGEgInN5c3RlbSBpZGVudGl0eSIgdGhhdCB0aGUgUkVTVCBBUEkgbGF5ZXIncyBTREsgdXNlZCBmb3IgYWxsIHBlZXIgaW50ZXJhY3Rpb24uIFNvLCB0aGF0IGVuZGVkIHVwIGJlaW5nIG11Y2ggc2ltcGxlci4KCgpJIGhvbmVzdGx5IGRvbid0IGxpa2UgdGhlIHNvbHV0aW9uIHdoZXJlIHRoZSBzZXJ2ZXItc2lkZSBhcHAgaGFzIHRvIG1haW50YWluIGEgY3JlZGVudGlhbCB3YWxsZXQgdGhhdCBjb250YWlucyBhbGwgcmVnaXN0ZXJlZCB1c2VycyBITEYgY3JlZGVudGlhbHMsIGJ1dCB0aGF0IGRvZXMgc2VlbSBjbGVhbmVyIHRoYW4gaGF2aW5nIGV2ZXJ5IG1vYmlsZSBhcHAgaW5zdGFuY2UgaXNzdWVkIGEgc2V0IG9mIEhMRiBjcmVkZW50aWFscyBhbmQgZGlyZWN0bHkgY29tbXVuaWNhdGluZyB3aXRoIHRoZSBibG9ja2NoYWluIG5ldHdvcmsuIE5vdGUsIEkgaGF2ZW4ndCBzZWVuIGFueW9uZSBvciBhbnl0aGluZyBwaXRjaGluZyB0aGF0IGFyY2hpdGVjdHVyZSwgYnV0IGl0IHdvdWxkIHByb2JhYmx5IGJlIHRoZSBvbmx5IGFsdGVybmF0aXZlLgoKCkZvciBhdXRoZW50aWNhdGlvbiBvZiBlbmQgdXNlcnMgb24gdGhlIG1vYmlsZSwgYXBwIEknZCByZWNvbW1lbmQgdXNpbmcgT3BlbklkIENvbm5lY3QncyBBdXRob3JpemF0aW9uIENvZGUgR3JhbnQgd2l0aCBhIFB1YmxpYyBDbGllbnQuIFVzZSBvbmUgb2YgdGhlIG51bWVyb3VzIElkYWFTIChJZGVudGl0eSBhcyBhIFNlcnZpY2UpIFByb3ZpZGVycyBhdmFpbGFibGUgdG9kYXkuICBJZiBPSURDIGlzIHVzZWQgaW4gdGhpcyBtYW5uZXIsIHlvdSBhbHNvIGdldCBhbiBPQXV0aDIgYWNjZXNzIHRva2VuIHRoYXQgY2FuIGJlIGNhY2hlZCBpbiB0aGUgbW9iaWxlIGFwcCAoYW5kIHJlZnJlc2hlZCBhcyBuZWVkZWQpIGFuZCBpbmNsdWRlZCB3aXRoIEFQSSBjYWxscyAoYXV0aG9yaXphdGlvbiBoZWFkZXIpIHRvIHRoZSBSRVNUIEFQSSBsYXllci4gQW4gQVBJIEdhdGV3YXkgY2FuIGJlIHVzZWQgdG8gaGFuZGxlIGF1dGhlbnRpY2F0aW9uLCBhdXRob3JpemF0aW9uLCByZXF1ZXN0IHZhbGlkYXRpb24sIGFuZCBvdGhlciB0eXBpY2FsIGNvbmNlcm5zIG9mIEFQSSBTZWN1cml0eS4gQWxsIHRoZSBtYWpvciBjbG91ZCBob3N0aW5nIHBsYXRmb3JtcyBvZmZlciBhbiBBUEkgR2F0ZXdheSBzb2x1dGlvbiB0aGF0IHdvdWxkIGRvIHRoaXMgb3V0LW9mLXRoZS1ib3gsIHRoZSBwcmV2aW91cyBwb3N0ZXIgbWVudGlvbmVkIEtvbmcsIEFwaWdlZSBpcyBhbm90aGVyLiBUaGVyZSBhcmUgYSBidW5jaCBvZiBvdGhlcnMuIAoKClJlZmVyZW5jZToKClsxXSBodHRwczovL2dpdGh1Yi5jb20vaHlwZXJsZWRnZXIvZmFicmljLXNhbXBsZXMvdHJlZS9yZWxlYXNlLTEuNC9iYWxhbmNlLXRyYW5zZmVyCgoKUkNCSgoKCk9uIFR1ZSwgRGVjIDMsIDIwMTkgYXQgNjoyNCBQTSBxcyBtZW5nIDxxc21lbmdAMTI2LmNvbT4gd3JvdGU6CgoKCmhpIE5pY2hvbGFzLAogdGhlIGlkZW50aXR5IGJlIGF1dGhlbnRvY2F0ZWQgYnkgZmFicmljLiBpZiB0aGUga29uZyBydW5zIG91dHNpZGUgdGhlIGZhYnJpYywgaXRzIHJlc3VsdCBvZiBJRCBhdXRoZW50aWNhdGUgaXMgbm90IGFjY2VwdGVkIGJ5IGZhYnJpYy4KICBJIHdhbnQgIHRvIGF1dGhlbmF0ZSB0aGUgcmVxdWVzdG9yIGluIHRoZSBmYWJyaWMuCnRoYW5rIHlvdS4KYmVzdCByZWdhcmRzLiAKcXNtZW5nCgoKCgoKLS0tLS0tLS0g5Y6f5aeL6YKu5Lu2IC0tLS0tLS0tCuWPkeS7tuS6uu+8miBOaWNob2xhcyBaYW51dGltIDxubHphbnV0aW1AeWFob28uY29tPgrml6XmnJ/vvJogMjAxOeW5tDEy5pyIM+aXpeWRqOS6jCDmmZrkuIo5OjMxCuaUtuS7tuS6uu+8miBmYWJyaWNAbGlzdHMuaHlwZXJsZWRnZXIub3JnLCBxcyBtZW5nIDxxc21lbmdAMTI2LmNvbT4K5Li7IOmimO+8miBSZTogW0h5cGVybGVkZ2VyIEZhYnJpY10gaWRlbnRpdHkgYXV0aGVudGljYXRpb24KCllvdSBjYW4gdXNlIEtvbmcgU2VydmljZSBtYW5hZ2VyIHdpdGggSldUIG9yIGFueSBvdGhlciBmb3JtIG9mIGF1dGhlbnRpY2F0aW9uIHRvIGFjY2VzcyB0aGUgc2VydmljZXMgdGhhdCBzdWJtaXQgdHJhbnNhY3Rpb25zIHRvIHRoZSBGYWJyaWMgbmV0d29yay4gSW4gdGhpcyBjYXNlLCB0aGUgdXNlciBjZXJ0aWZpY2F0ZSBtdXN0IGJlIHByZXNlbnQgd2l0aCB0aGUgc2VydmljZXMKCgpFbSB0ZXLDp2EtZmVpcmEsIDMgZGUgZGV6ZW1icm8gZGUgMjAxOSAxMDowODo0NCBCUlQsIHFzIG1lbmcgPHFzbWVuZ0AxMjYuY29tPiBlc2NyZXZldToKCgoKCkhpIGV4cGVydHMsIAogICAgICBJbiB0aGUgY3VycmVudCBmYWJyaWMgZGVzaWduLCB0aGUgY2xpZW50IGFwcCBpcyB0aGUgdXNlIG9mIEZhYnJpYy4gUnVubmluZyBhIGNsaWVudCBhcHAgaXMgYSBoZWF2eSBjb3N0ICBmb3IgYSBtb2JpbGVwaG9uZSB1c2VyLiBXZSBkZXNpZ24gYSBwYXltZW50IHN5c3RlbSwgd2hlcmUgYSB1c2VyIGNhbiBzaWduIGEgcGF5bWVudCByZXF1ZXN0IHdpdGggaGlzL2hlciBwcml2YXRlIGtleSwgc3VibWl0IGl0IHRvIGEgY2xpZW50IGFwcCBhbmQgdGhlbiB0byBGYWJyaWMuICAKQSBwcm9ibGVtIGV4aXN0cyB0aGF0IGhvdyB0aGUgaWRlbnRpdHkgb2YgdGhlIHVzZXIgb3IgcmVxdWVzdG9yIGNhbiBiZSBhdXRoZW50aWNhdGVkPyAgQ2FuIGFueW9uZSBnaXZlIG1lIHNvbWUgc3VnZ2VzdGlvbnM/CiBUaGFuayB5b3UuCiBCZXN0IHJlZ2FyZHMsCnFzbWVuZwoKCgoKIAoKCgoKCi0tCgpSb2JlcnQgQy4gQnJvZWNrZWxtYW5uIEpyIHwgTWFuYWdpbmcgRGlyZWN0b3IgfCAgSXlhU2VjCgpNZWRpdW0uY29tIExpbmtlZEluIFR3aXR0ZXIgUGVyc29uYWwgQmxvZwptOiArMSAzMTQtNDk0LTMzOTggKFNNUyBvciBXaGF0c0FwcCkgfCBmYXg6ICsxICg4NjYpIDQ4NC0xNjM0CmVtYWlsOiByb2JlcnRAaXlhc2VjLmlvIHwgc2l0ZTogaXlhc2VjLmlvCgptYWlsOiAxOTIxNSBTRSAzNHRoIFN0IFN0ZSAxMDYtNDA3IENhbWFzIFdBIDk4NjA3LTg4MzAKCgoKCgoKCgoKCiA=\n",
        "CreatedAt": "2020-01-13T03:12:25.000Z",
        "CreatedAtInTZ": "2020-01-13T11:12:25.000Z",
        "CreatedTZ": 8,
        "DataSourceId": "groupsio",
        "InternalId": "<5b13a9eb.5ce1.16f9ce361ee.Coremail.qsmeng@126.com>",
        "MailingList": {
          "InternalId": "16360",
          "Name": "hyperledger+fabric",
          "URL": "https://groups.io/g/hyperledger+fabric"
        },
        "MessageId": "fb9df5a687da5376805492b6cbddcf718aa8f5b2",
        "Recipients": [],
        "Sender": {
          "DataSourceId": "groupsio",
          "Email": "qsmeng@126.com",
          "Id": "8fd16ab6f33781a378100d3345e10defd5e35108",
          "Name": "qs meng"
        },
        "Subject": "=?UTF-8?B?Rnc6UmU6UmU6IHJl77yaW0h5cGVybGVkZ2VyIEZhYnJpY10gaWRlbnRpdHkgYXV0aGVudGljYXRpb24=?="
      }
    },
    {
      "Message": {
        "Body": "It seems logical for orderer to maintain the ledger (at least the blockchai=n) for each registered channel? Can someone confirm this?If not, how does it validate?\nThanks\n",
        "CreatedAt": "2020-01-07T03:28:27.000Z",
        "CreatedAtInTZ": "2020-01-06T19:28:27.000Z",
        "CreatedTZ": -8,
        "DataSourceId": "groupsio",
        "InternalId": "<sEKy.1578367707190922141.Eeha@lists.hyperledger.org>",
        "MailingList": {
          "InternalId": "16360",
          "Name": "hyperledger+fabric",
          "URL": "https://groups.io/g/hyperledger+fabric"
        },
        "MessageId": "e4ecf0078a274b896eeb4869f0745a0e44405822",
        "Recipients": [],
        "Sender": {
          "DataSourceId": "groupsio",
          "Email": "kevinx8888@gmail.com",
          "Id": "990cec4c03844bbed8a545d963b8056dfc4fac0e",
          "Name": "Kevin X"
        },
        "Subject": "Does Orderer maintain ledger for each channel? #fabric-orderer"
      }
    },
    {
      "Message": {
        "Body": "=20\n   ----- Forwarded Message ----- From: Ont Rares <ontrares@yahoo.com>To: hy=perledger-fabric@lists.hyperledger.org <hyperledger-fabric@lists.hyperledge=r.org>Sent: Sunday, January 12, 2020, 05:40:45 PM GMT+2Subject: First Netwo=rk on Windows =C2=A0 =C2=A0 =C2=A0 Hi, I encountered a problem on the samples repository=.=C2=A0=C2=A0=C2=A0 =C2=A0 =C2=A0 On the first-network project if I run=C2==A0./byfn.sh -m generate,=C2=A0./byfn.sh generate or=C2=A0./byfn.sh up I al=ways get:*=C2=A0 =C2=A0 =C2=A0 Is there a way to just download these certificates or =generate them in another way or bypass them? I must use the Windows system.\n*Generating certs and genesis block for channel 'mychannel' with CLI timeou=t of '10' seconds and CLI delay of '3' secondsContinue? [Y/n] yproceeding .=../c/Users/bc/bin/cryptogen############################################################### Generate ce=rtificates using cryptogen tool ###########################################=########################+ cryptogen generate --config=3D./crypto-config.yam=lorg1.example.companic: runtime error: invalid memory address or nil pointe=r dereference[signal 0xc0000005 code=3D0x0 addr=3D0x0 pc=3D0x7ee984]goroutine 1 [running]:github.com/hyperledger/fabric/common/tools/cryptogen/=msp.GenerateVerifyingMSP(0xc00001a5c0, 0x34, 0x0, 0x0, 0xc00001ca01, 0x16, =0x0)=C2=A0 =C2=A0 =C2=A0 =C2=A0 /w/workspace/fabric-release-jobs-x86_64/gop=ath/src/github.com/hyperledger/fabric/common/tools/cryptogen/msp/generator.=go:186 +0x2d4main.generatePeerOrg(0x95319f, 0xd, 0xc00001e270, 0x4, 0xc0000=1e290, 0x10, 0x1, 0x0,0x9501fd, 0x2, ...)=C2=A0 =C2=A0 =C2=A0 =C2=A0 /w/wor=kspace/fabric-release-jobs-x86_64/gopath/src/github.com/hyperledger/fabric/=common/tools/cryptogen/main.go:537 +0x762main.generate()=C2=A0 =C2=A0 =C2==A0 =C2=A0 /w/workspace/fabric-release-jobs-x86_64/gopath/src/github.com/hy=perledger/fabric/common/tools/cryptogen/main.go:395 +0x2a8main.main()=C2=A0= =C2=A0 =C2=A0 =C2=A0 /w/workspace/fabric-release-jobs-x86_64/gopath/src/gi=thub.com/hyperledger/fabric/common/tools/cryptogen/main.go:223 +0x2af+ res==3D2+ set +xFailed to generate certificates...\n\n\n =20\n",
        "CreatedAt": "2020-01-12T15:53:39.000Z",
        "CreatedAtInTZ": "2020-01-12T15:53:39.000Z",
        "DataSourceId": "groupsio",
        "InternalId": "<425543797.6408424.1578844419597@mail.yahoo.com>",
        "MailingList": {
          "InternalId": "16360",
          "Name": "hyperledger+fabric",
          "URL": "https://groups.io/g/hyperledger+fabric"
        },
        "MessageId": "db6791a316e2fb47c8568fd6e3fa5fbb9831db50",
        "ParentID": "eacc9c686526053154ee61747ad3cf4bcdc906b5",
        "ParentInternalID": "<1527140474.6766641.1578843645629@mail.yahoo.com>",
        "Recipients": [
          {
            "DataSourceId": "groupsio",
            "Email": "hyperledger-fabric@lists.hyperledger.org",
            "Id": "ee9aee48ed3b9cb7ea768dfc72cc15e2d4072b7e",
            "Name": "hyperledger-fabric"
          }
        ],
        "Sender": {
          "DataSourceId": "groupsio",
          "Email": "ontrares@yahoo.com",
          "Id": "ba96a6916f8d99536adef6c012f39b242e03fd39",
          "Name": "ontrares"
        },
        "Subject": "Fw: First Network on Windows"
      }
    },
    {
      "Message": {
        "Body": "RGVhciBIeXBlcmxlZGdlciBBZG1pbmlzdHJhdG9ycywKCgpBcyByZXBvcnRlZCBwcmV2aW91c2x5LCBhIGdyb3VwIG9mIHZvbHVudGVlcnMgZnJvbSBUZWNobmljYWwgV29ya2luZyBHcm91cCBDaGluYSBoYXZlIHRyYW5zbGF0ZWQgRmFicmljIDEuNCBkb2NzIGludG8gQ2hpbmVzZSwgYW5kIHdlIHdvdWxkIGxpa2Ugc29tZSBoZWxwIHRvIGluY29ycG9yYXRlIHRoZW0gaW50byByZWFkdGhlZG9jcy4gVGhpcyBjb3VsZCBiZSBkb25lIGJ5IGNyZWF0aW5nIGEgY2hpbGQgcHJvamVjdCBpbiByZWFkdGhlZG9jcyB1bmRlciBGYWJyaWMsIGFuZCBwb2ludCBpdCB0byBbMV0sIHdoZXJlIHRyYW5zbGF0ZWQgZG9jcyByZXNpZGUuCgoKV2UndmUgbWFkZSBhIGRlbW8gc2l0ZSB0byBzaG93Y2FzZSBmaW5hbCByZXN1bHQgYXQgWzJdLiBBbmQgd2UgYXJlIGhhcHB5IHRvIGZhY2lsaXRhdGUgdGhlIHByb2Nlc3MgYWxvbmcgdGhlIHdheS4KCgpJIHdpbGwgc2VuZCBvdXQgYSBzZXBhcmF0ZSBtYWlsIGV4cGxhaW5pbmcgb3VyIGN1cnJlbnQgcHJvY2VzcyBmb3IgdHJhbnNsYXRpb24sIGluIGNhc2Ugc29tZSBvZiB5b3UgYXJlIGludGVyZXN0ZWQuCgoKQ2hlZXJzLCAKWWFuZyBDaGVuZwoKClsxXSBodHRwczovL2dpdGh1Yi5jb20vaHlwZXJsZWRnZXItbGFicy9mYWJyaWMtZG9jcy1jbgpbMl0gaHR0cHM6Ly9zdG9uZS1mYWJyaWMucmVhZHRoZWRvY3MuaW8vemgvcmVsZWFzZS0xLjRfemgtY24vCgoKLS0KCrPM0fQKWWFuZyBDaGVuZwpncmVhdF9jeV9hbmdAMTYzLmNvbQ==\n",
        "CreatedAt": "2020-01-13T06:55:12.000Z",
        "CreatedAtInTZ": "2020-01-13T14:55:12.000Z",
        "CreatedTZ": 8,
        "DataSourceId": "groupsio",
        "InternalId": "<544db31.755b.16f9daf5a21.Coremail.great_cy_ang@163.com>",
        "MailingList": {
          "InternalId": "16360",
          "Name": "hyperledger+fabric",
          "URL": "https://groups.io/g/hyperledger+fabric"
        },
        "MessageId": "e305f5d9c8a78813a9af147741721e91b959a304",
        "Recipients": [
          {
            "DataSourceId": "groupsio",
            "Email": "tsc@lists.hyperledger.org",
            "Id": "15890f3bb9e0dec0b64c730ebe075c01f7a96bbe",
            "Name": "tsc"
          },
          {
            "DataSourceId": "groupsio",
            "Email": "fabric@lists.hyperledger.org",
            "Id": "531f64845a3a391cc5152c9f7975f0096bf88da5",
            "Name": "fabric"
          }
        ],
        "Sender": {
          "DataSourceId": "groupsio",
          "Email": "great_cy_ang@163.com",
          "Id": "86fada9e96e591f183b80963bef60f4e817f2176",
          "Name": "Yang Cheng"
        },
        "Subject": "[i18n][Help-wanted] Incorporate Fabric docs in zh-CN into ReadTheDocs"
      }
    }
  ],
  "MetaData": {
    "BackendName": "groupsio",
    "BackendVersion": "0.1.0",
    "Project": "LFN",
    "Tags": null
  }
}
